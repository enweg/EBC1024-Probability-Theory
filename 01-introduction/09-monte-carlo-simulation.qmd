# Monte Carlo simulations

Imagine you are working for a large pension fund and that you have figured out that the monthly return on your portfolio is approximately Normal distributed with mean $\mu$ and standard deviation $\sigma$. Because you work for a pension fund, you have monthly expenses in the form of pension payments to clients. You are afraid of not being able to make these payments and thus start looking for ways to insure that you can make the payments over the next `t` years. A bank you have worked with before offers you a financial product. Every month that your portfolio does not return enough money to pay for the monthly payment of `x` euros, they will match the difference, therefore allowing you to still pay `x` euros. In return, they request to get `y` cents on any euro you make above the `x` euros in each month. Additionally, they request a one-off payment of `z` euros. For now we abstract away from all the other problems and instead your task as the econometrician in the company is to figure out how much you are expected to pay the bank and how much they are expected to pay you over the next `t` years. 

```{r}
expected_payments <- function(start_value, mu, sigma, t, x, y, z) {
  
    returns <- rnorm(t, mu, sigma)                                      # <1>
    money_received <- 0                                                 # <2>
    money_paid <- z                                                     # <2>
    portfolio_value <- rep(NA, t+1)                                     # <2>
    portfolio_value[1] <- start_value                                   # <2>
    for (tt in 2:(t+1)) {                                               # <3>
      gain <- portfolio_value[tt-1] * returns[tt-1]
      if (gain == x) {
        portfolio_value[tt] <- portfolio_value[tt-1]
      } else if (gain > x) {
        left_over_gain <- gain - x
        to_pay = y*left_over_gain
        left_over_gain <- left_over_gain - to_pay
        portfolio_value[tt] <- portfolio_value[tt-1] + left_over_gain
        money_paid <- money_paid + to_pay
      } else {
        money_received <- money_received + x
        portfolio_value[tt] <- portfolio_value[tt-1] + gain
      }
    }
    
    out <- c(
      final_portfolio_value = portfolio_value[t+1], 
      money_paid = money_paid, 
      money_received = money_received
    )
    
    return(out)
}
```
1. Draw the random returns from the Normal distribution
2. Create variables to store simulation results
3. Loop over each period. We start at `2` because period one is the starting period. 

```{r}
start_value <- 1000
mu <- 0.01
sigma <- 0.05
t <- 12*10
x <- 5
y <- 0.2
z <- 50
experiment_results <- expected_payments(start_value, mu, sigma, t, x, y, z)
experiment_results
```

```{r}
MC_expected_payments <- function(n, 
                                 start_value = 1000000, 
                                 mu = 0.01, 
                                 sigma = 0.05, 
                                 t = 12*10, 
                                 x = 5000, 
                                 y = 0.2, 
                                 z = 50, 
                                 seed = 6150533) {
  
  set.seed(seed)
  f <- function(i) expected_payments(start_value, mu, sigma, t, x, y, z)
  outputs <- lapply(1:n, f)
  outputs <- do.call(rbind, outputs)
  mean_outputs <- apply(outputs, 2, mean)
  return(mean_outputs)
}
```

```{r}
outputs <- MC_expected_payments(1000)
outputs
```

```{r}
value_contract <- function(n, xs, ...) {
  f <- function(x) c(MC_expected_payments(n, x = x, ...), x = x)
  exp_pay <- lapply(xs, f)
  exp_pay <- do.call(rbind, exp_pay)
  exp_value <- exp_pay[, "money_received"] - exp_pay[, "money_paid"]
  output <- cbind(exp_value, exp_pay[, "x"])
  colnames(output) <- c("Expected Value", "X")
  return(output)
}
```

```{r}
mu <- 0.01 
sigma <- 0.1 
y <- 0.2
z <- 10000
start_value <- 10000
value <- value_contract(1000, seq(0, 500, 1), start_value = start_value, y = y, z = z, mu = mu, sigma = sigma);
```

```{r}
plot(value[, "X"], 
     value[, "Expected Value"], 
     type = "l", 
     main = "Value of Proposed Contract",
     xlab = "Monthly Payments Due", 
     ylab = "$")
abline(h = 0, col = "black", lty = 3)
```
